// 92. Reverse Linked List II
// https://leetcode.com/problems/reverse-linked-list-ii/description/

/**
Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseBetween(ListNode* head, int left, int right) {
        ListNode* curr = head;
ListNode* prev = NULL;

        while(curr!=NULL){
            ListNode* forward  = curr->next;
            curr->next = prev;
            prev = curr;
            curr=forward;

        }

        return prev;

    }
};
